/*
import React, { useEffect, useRef } from 'react';
import maplibregl from 'maplibre-gl';
import 'maplibre-gl/dist/maplibre-gl.css';

const MapLibrePublic = () => {
  const mapContainerRef = useRef(null);

  useEffect(() => {
    if (!mapContainerRef.current) return;

    const map = new maplibregl.Map({
      container: mapContainerRef.current,
      style: 'https://api.maptiler.com/maps/basic/style.json?key=b59pIgoNGnhNHBDuQlry',
      center: [79.0882, 21.1458], // Nagpur
      zoom: 8,
    });

    return () => map.remove();
  }, []);

  return <div ref={mapContainerRef} style={{ width: '100%', height: '100vh' }} />;
};

export default MapLibrePublic;


import React, { useEffect, useRef } from 'react';
import maplibregl from 'maplibre-gl';
import 'maplibre-gl/dist/maplibre-gl.css';

const MapLibreTiles = () => {
  const mapContainerRef = useRef(null);

  useEffect(() => {
    if (!mapContainerRef.current) return;

    const map = new maplibregl.Map({
      container: mapContainerRef.current,
      style: {
        version: 8,
        sources: {},
        layers: [],
      },
      center: [79.0882, 21.1458], // Nagpur
      zoom: 8,
    });

    map.on('load', () => {
      // Add public Maptiler vector tiles
      map.addSource('public-tiles', {
        type: 'vector',
        tiles: [
          'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=b59pIgoNGnhNHBDuQlry'
        ],
        minzoom: 0,
        maxzoom: 14,
      });

      // Example: add points layer
      map.addLayer({
        id: 'public-points',
        type: 'circle',
        source: 'public-tiles',
        'source-layer': 'roads', // a sample layer name in Maptiler tiles
        paint: {
          'circle-radius': 4,
          'circle-color': '#FF5722',
        },
      });

      // Example: add lines layer
      map.addLayer({
        id: 'public-lines',
        type: 'line',
        source: 'public-tiles',
        'source-layer': 'roads', // sample layer name
        paint: {
          'line-color': '#2196F3',
          'line-width': 1.5,
        },
      });

      // Example: add polygons layer
      map.addLayer({
        id: 'public-polygons',
        type: 'fill',
        source: 'public-tiles',
        'source-layer': 'landuse', // sample layer name
        paint: {
          'fill-color': '#4CAF50',
          'fill-opacity': 0.3,
        },
      });
    });

    return () => map.remove();
  }, []);

  return <div ref={mapContainerRef} style={{ width: '100%', height: '100vh' }} />;
};

export default MapLibreTiles;


import React, { useEffect, useRef } from 'react';
import maplibregl from 'maplibre-gl';
import 'maplibre-gl/dist/maplibre-gl.css';

const MapLibreTiles = () => {
  const mapContainerRef = useRef(null);

  useEffect(() => {
    if (!mapContainerRef.current) return;

    const map = new maplibregl.Map({
      container: mapContainerRef.current,
      style: {
        version: 8,
        sources: {},
        layers: [],
      },
      center: [79.0882, 21.1458], // Nagpur
      zoom: 8,
    });

    map.on('load', () => {
      // Add PostGIS vector tile source
      map.addSource('postgis-tiles', {
        type: 'vector',
        tiles: ['http://localhost:3001/tiles/{z}/{x}/{y}.pbf'],
        minzoom: 0,
        maxzoom: 14,
      });

      // Points
      map.addLayer({
        id: 'points-layer',
        type: 'circle',
        source: 'postgis-tiles',
        'source-layer': 'features', // must match layer name in ST_AsMVT
        paint: {
          'circle-radius': 5,
          'circle-color': '#FF5722',
        },
        filter: ['==', '$type', 'Point'],
      });

      // Lines
      map.addLayer({
        id: 'lines-layer',
        type: 'line',
        source: 'postgis-tiles',
        'source-layer': 'features',
        paint: {
          'line-width': 2,
          'line-color': '#2196F3',
        },
        filter: ['==', '$type', 'LineString'],
      });

      // Polygons
      map.addLayer({
        id: 'polygons-layer',
        type: 'fill',
        source: 'postgis-tiles',
        'source-layer': 'features',
        paint: {
          'fill-color': '#4CAF50',
          'fill-opacity': 0.4,
        },
        filter: ['==', '$type', 'Polygon'],
      });
    });

    return () => map.remove();
  }, []);

  return <div ref={mapContainerRef} style={{ width: '100%', height: '100vh' }} />;
};

export default MapLibreTiles;

*/
